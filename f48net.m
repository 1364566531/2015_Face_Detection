function net = f48net()

net.layers = {} ;
net.layers{end+1} = struct('type', 'conv', ...
    'weights', {{0.01*randn(5,5,3,64, 'single'), zeros(1, 64, 'single')}}, ...
    'stride', 1, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
    'method', 'max', ...
    'pool', [3 3], ...
    'stride', 2, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;
%net.layers{end+1} = struct('type', 'normalize',...
 %   'param',[9 1 0.0001/5 0.75]) ;
net.layers{end+1} = struct('type', 'conv', ...
    'weights', {{0.05*randn(5,5,64,64, 'single'), zeros(1, 64, 'single')}}, ...
    'stride', 1, ...
    'pad', 0) ;
%net.layers{end+1} = struct('type', 'normalize',...
 %   'param',[9 1 0.0001/5 0.75]) ;
net.layers{end+1} = struct('type', 'pool', ...
    'method', 'max', ...
    'pool', [3 3], ...
    'stride', 2, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;
net.layers{end+1} = struct('type', 'conv', ...
    'weights', {{0.05*randn(8,8,64,256, 'single'), zeros(1, 256, 'single')}}, ...
    'stride', 1, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'relu') ;
%net.layers{end+1} = struct('type', 'dropout',  'rate', 0.5) ;
net.layers{end+1} = struct('type', 'conv', ...
    'weights', {{0.05*randn(1,1,256,2, 'single'), zeros(1, 2, 'single')}}, ...
    'stride', 1, ...
    'pad', 0) ;
%{
net.layers{end+1} = struct('type', 'custom48', ...
    'weights', {{0.05*randn(1,1,400,2, 'single'), zeros(1, 2, 'single')}}, ...
    'stride', 1, ...
    'pad', 0) ;
    %}
net.layers{end+1} = struct('type', 'relu') ;
net.layers{end+1} = struct('type', 'softmaxloss') ;